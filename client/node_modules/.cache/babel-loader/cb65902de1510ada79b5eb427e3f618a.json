{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; //middleware from redux/ \n\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware(); //LESSON 105: Set up middleware. \n\nconst middlewares = [sagaMiddleware]; //LESSON 151 - ONLY SHOWING LOGGER IF IN PRODUCTION MODE: \n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store); //A persisted version of our store. \n//CHANGES: \n\n/*\r\n*   import thunk from 'redux-thunk'-Removed L183 when importing redux-saga.\r\n*/","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAAsD;;AACtD,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CACA;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;;AACA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AACD,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B,C,CAAuC;AAG9C;;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux'; //middleware from redux/ \r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';  \r\nimport createSagaMiddleware from 'redux-saga'; \r\nimport { fetchCollectionsStart } from './shop/shop.sagas'\r\nimport rootReducer from './root-reducer'; \r\n\r\nconst sagaMiddleware = createSagaMiddleware(); \r\n//LESSON 105: Set up middleware. \r\nconst middlewares = [sagaMiddleware]; \r\n\r\n//LESSON 151 - ONLY SHOWING LOGGER IF IN PRODUCTION MODE: \r\nif(process.env.NODE_ENV===\"development\"){\r\n    middlewares.push(logger);\r\n}\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(fetchCollectionsStart); \r\n\r\nexport const persistor = persistStore(store); //A persisted version of our store. \r\n\r\n\r\n//CHANGES: \r\n/*\r\n*   import thunk from 'redux-thunk'-Removed L183 when importing redux-saga.\r\n*/"]},"metadata":{},"sourceType":"module"}