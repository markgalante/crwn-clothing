{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Dropbox\\\\Udemy - React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); //Lesson 169 4:17\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  //Changed to class compo on L166\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 79\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap)) //Cleared in Lesson 174\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n/* ALL REMOVED IN LESSON 174\r\n\r\nstate = {\r\n        loading: true\r\n    }; \r\n\r\n    unsubscribeFromSnapshot = null;\r\n    //L173: moved because shot items will only be uploaded when the shop page is accessed.  \r\n    componentDidMount(){\r\n        const { updateCollections } = this.props; \r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        //LESSON 173 - Lots of nesting NOT IDEAL\r\n        // fetch(\"https://firestore.googleapis.com/v1/projects/crwn-db-3668c/databases/(default)/documents/collections\")\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(\"COLLECTIONS\", collections)); \r\n        \r\n        collectionRef.get() //LESSON 173 - promise\r\n        .then(\r\n            snapshot => {\r\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionMap);  console.log(collectionMap);\r\n                this.setState({loading: false}); \r\n            }\r\n        )\r\n\r\n        //LESSON 173 - Commented out! \r\n        // this.unsubscribeFromSnapshot= collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionMap);  console.log(collectionMap);\r\n        //     this.setState({loading: false}); \r\n        // });\r\n    };\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD,C,CAAyE;;AACzE,MAAMM,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAE;AAEpCC,EAAAA,iBAAiB,GAAE;AACnB,UAAM;AAAEN,MAAAA;AAAF,QAAiC,KAAKO,KAA5C;AACAP,IAAAA,0BAA0B;AACzB;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACI,MAAA,MAAM,EAAGJ,KAAD,iBACR,oBAAC,8BAAD;AACI,QAAA,SAAS,EAAEG;AADf,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAYI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAgBH;;AAzBiC;;AA0BrC;AAED,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAET;AADuB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B,CADN,CAEpC;;AAFoC,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CAClBgB,eADkB,EAElBC,kBAFkB,CAAP,CAGTT,QAHS,CAAf;AAMA","sourcesContent":["import React from 'react';  \r\nimport { Route } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { connect } from 'react-redux'; \r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component'; \r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; \r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors'\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); //Lesson 169 4:17\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); \r\n\r\nclass ShopPage extends React.Component{ //Changed to class compo on L166\r\n    \r\n    componentDidMount(){\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();   \r\n    }\r\n\r\n    render(){\r\n        const { match, isCollectionFetching } = this.props;\r\n        return(\r\n            <div className='shop-page'> \r\n                {/* <Route exact path={`${match.path}`} component={CollectionsOverview} /> \r\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />  */}\r\n\r\n                {/* Lession 169 04:51 - Remove \"component\" and added \"render\" */}\r\n                <Route exact path={`${match.path}`} \r\n                    render={(props)=>(\r\n                    <CollectionsOverviewWithSpinner \r\n                        isLoading={isCollectionFetching} \r\n                        {...props} />\r\n                        )} \r\n                    /> \r\n                <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />} /> \r\n            </div>\r\n        );\r\n    };\r\n}; \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap)) //Cleared in Lesson 174\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    mapDispatchToProps\r\n    )(ShopPage); \r\n\r\n\r\n/* ALL REMOVED IN LESSON 174\r\n\r\nstate = {\r\n        loading: true\r\n    }; \r\n\r\n    unsubscribeFromSnapshot = null;\r\n    //L173: moved because shot items will only be uploaded when the shop page is accessed.  \r\n    componentDidMount(){\r\n        const { updateCollections } = this.props; \r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        //LESSON 173 - Lots of nesting NOT IDEAL\r\n        // fetch(\"https://firestore.googleapis.com/v1/projects/crwn-db-3668c/databases/(default)/documents/collections\")\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(\"COLLECTIONS\", collections)); \r\n        \r\n        collectionRef.get() //LESSON 173 - promise\r\n        .then(\r\n            snapshot => {\r\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionMap);  console.log(collectionMap);\r\n                this.setState({loading: false}); \r\n            }\r\n        )\r\n\r\n        //LESSON 173 - Commented out! \r\n        // this.unsubscribeFromSnapshot= collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionMap);  console.log(collectionMap);\r\n        //     this.setState({loading: false}); \r\n        // });\r\n    };\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}