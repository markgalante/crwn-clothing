{"ast":null,"code":"//LESSON 104: \n\n/*\r\nA root reducer is actual base reducer object that represents all the state of the \r\napplication. \r\n\r\nCombines all other states together from other reducers.\r\n*/\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; //States you want to use local storage; \n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'] //contains reducers we want to store. 'user' is being handled by firebase. Therefore, we only want to use 'cart' \n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","persistConfig","key","whitelist","rootReducer","user","cart"],"mappings":"AAAA;;AACA;;;;;;AAOA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGE;;AAHF,CAAtB;AAMA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,IAAI,EAAEN,WAD0B;AAEhCO,EAAAA,IAAI,EAAEN;AAF0B,CAAD,CAAnC;AAKA,eAAeH,cAAc,CAACI,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["//LESSON 104: \r\n/*\r\nA root reducer is actual base reducer object that represents all the state of the \r\napplication. \r\n\r\nCombines all other states together from other reducers.\r\n*/\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; //States you want to use local storage; \r\n\r\nimport userReducer from './user/user.reducer';\r\nimport cartReducer from './cart/cart.reducer'; \r\n\r\nconst persistConfig = {\r\n    key: 'root', \r\n    storage, \r\n    whitelist: ['cart'] //contains reducers we want to store. 'user' is being handled by firebase. Therefore, we only want to use 'cart' \r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    cart: cartReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}