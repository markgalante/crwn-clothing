{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Dropbox\\\\Udemy - React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'; // import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'; // import CollectionPage from '../collection/collection.component'; \n\nimport CollectionPageContainer from '../collection/collection.container';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; //REMOVED L177\n//const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); //Lesson 169 4:17 and removed in L177: 8:00\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage); \n\nclass ShopPage extends React.Component {\n  //Changed to class compo on L166\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // render={(props)=>(\n      //     <CollectionsOverviewWithSpinner \n      //         isLoading={isCollectionFetching} \n      //         {...props} />\n      //     )} \n      ,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId` // render={(props)=> (\n      //     <CollectionPageWithSpinner \n      //         isLoading={!isCollectionLoaded} \n      //         {...props} />\n      //     )} \n      ,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()) // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap)) //Cleared in Lesson 174\n\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n/* ALL REMOVED IN LESSON 174\r\n\r\nstate = {\r\n        loading: true\r\n    }; \r\n\r\n    unsubscribeFromSnapshot = null;\r\n    //L173: moved because shot items will only be uploaded when the shop page is accessed.  \r\n    componentDidMount(){\r\n        const { updateCollections } = this.props; \r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        //LESSON 173 - Lots of nesting NOT IDEAL\r\n        // fetch(\"https://firestore.googleapis.com/v1/projects/crwn-db-3668c/databases/(default)/documents/collections\")\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(\"COLLECTIONS\", collections)); \r\n        \r\n        collectionRef.get() //LESSON 173 - promise\r\n        .then(\r\n            snapshot => {\r\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionMap);  console.log(collectionMap);\r\n                this.setState({loading: false}); \r\n            }\r\n        )\r\n\r\n        //LESSON 173 - Commented out! \r\n        // this.unsubscribeFromSnapshot= collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionMap);  console.log(collectionMap);\r\n        //     this.setState({loading: false}); \r\n        // });\r\n    };\r\n\r\n\r\n    <Route exact path={`${match.path}`} component={CollectionsOverview} /> \r\n    <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n\r\n    REMOVED L177:\r\n    const mapStateToProps = createStructuredSelector({\r\n        isCollectionFetching: selectIsCollectionFetching,\r\n        isCollectionLoaded: selectIsCollectionsLoaded\r\n    });\r\n\r\n    */","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC,C,CACA;;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC,C,CAEA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAsC;AAAE;AAGpCC,EAAAA,iBAAiB,GAAE;AACnB,UAAM;AAAEH,MAAAA;AAAF,QAA4B,KAAKI,KAAvC;AACAJ,IAAAA,qBAAqB;AACpB;;AAEDK,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAAjC,CACI;AACA;AACA;AACA;AACA;AALJ;AAMI,MAAA,SAAS,EAAET,4BANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAUI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B,CACI;AACA;AACA;AACA;AACA;AALJ;AAMI,MAAA,SAAS,EAAER,uBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAqBH;;AA/BiC;;AAgCrC;;AAED,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCT,EAAAA,qBAAqB,EAAE,MAAMS,QAAQ,CAACT,qBAAqB,EAAtB,CADD,CAEpC;;AAFoC,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAClB,IADkB,EAElBW,kBAFkB,CAAP,CAGTP,QAHS,CAAf;AAMA","sourcesContent":["import React, {useEffect} from 'react';  \r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\n\r\n// import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'; \r\n// import CollectionPage from '../collection/collection.component'; \r\nimport CollectionPageContainer from '../collection/collection.container'\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\n//REMOVED L177\r\n//const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview); //Lesson 169 4:17 and removed in L177: 8:00\r\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage); \r\n\r\nclass ShopPage extends React.Component{ //Changed to class compo on L166\r\n    \r\n\r\n    componentDidMount(){\r\n    const { fetchCollectionsStart } = this.props;\r\n    fetchCollectionsStart();   \r\n    }\r\n\r\n    render(){\r\n        const { match } = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                {/* Lession 169 04:51 - Remove \"component\" and added \"render\" */}\r\n                <Route exact path={`${match.path}`} \r\n                    // render={(props)=>(\r\n                    //     <CollectionsOverviewWithSpinner \r\n                    //         isLoading={isCollectionFetching} \r\n                    //         {...props} />\r\n                    //     )} \r\n                    component={CollectionsOverviewContainer}\r\n                    /> \r\n                <Route path={`${match.path}/:collectionId`} \r\n                    // render={(props)=> (\r\n                    //     <CollectionPageWithSpinner \r\n                    //         isLoading={!isCollectionLoaded} \r\n                    //         {...props} />\r\n                    //     )} \r\n                    component={CollectionPageContainer}\r\n                    /> \r\n            </div>\r\n        );\r\n    };\r\n}; \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap)) //Cleared in Lesson 174\r\n});\r\n\r\nexport default connect(\r\n    null, \r\n    mapDispatchToProps\r\n    )(ShopPage); \r\n\r\n\r\n/* ALL REMOVED IN LESSON 174\r\n\r\nstate = {\r\n        loading: true\r\n    }; \r\n\r\n    unsubscribeFromSnapshot = null;\r\n    //L173: moved because shot items will only be uploaded when the shop page is accessed.  \r\n    componentDidMount(){\r\n        const { updateCollections } = this.props; \r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        //LESSON 173 - Lots of nesting NOT IDEAL\r\n        // fetch(\"https://firestore.googleapis.com/v1/projects/crwn-db-3668c/databases/(default)/documents/collections\")\r\n        // .then(response => response.json())\r\n        // .then(collections => console.log(\"COLLECTIONS\", collections)); \r\n        \r\n        collectionRef.get() //LESSON 173 - promise\r\n        .then(\r\n            snapshot => {\r\n                const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n                updateCollections(collectionMap);  console.log(collectionMap);\r\n                this.setState({loading: false}); \r\n            }\r\n        )\r\n\r\n        //LESSON 173 - Commented out! \r\n        // this.unsubscribeFromSnapshot= collectionRef.onSnapshot(async snapshot => {\r\n        //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        //     updateCollections(collectionMap);  console.log(collectionMap);\r\n        //     this.setState({loading: false}); \r\n        // });\r\n    };\r\n\r\n\r\n    <Route exact path={`${match.path}`} component={CollectionsOverview} /> \r\n    <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n\r\n    REMOVED L177:\r\n    const mapStateToProps = createStructuredSelector({\r\n        isCollectionFetching: selectIsCollectionFetching,\r\n        isCollectionLoaded: selectIsCollectionsLoaded\r\n    });\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}