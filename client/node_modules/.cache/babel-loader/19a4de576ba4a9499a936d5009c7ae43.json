{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Dropbox\\\\Udemy - React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../../components/cuttom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); //prevents default submit action from happening. Gives us full control over what is going to happen.\n\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {}\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target; //pulls both value and name off event.target (which is the input element)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \" Sign In With Google \"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","err","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;AAEA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,GAAE;AACT;;AADS,SASbC,YATa,GASE,MAAMC,KAAN,IAAgB;AAC3BA,MAAAA,KAAK,CAACC,cAAN,GAD2B,CACH;;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;;AAEA,UAAG;AACC,cAAMV,IAAI,CAACW,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;AACA,aAAKG,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,QAAQ,EAAE;AAAtB,SAAd;AACH,OAHD,CAGE,OAAMI,GAAN,EAAU,CAEX;AACJ,KAnBY;;AAAA,SAqBbC,YArBa,GAqBER,KAAK,IAAI;AACpB,YAAM;AAAES,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBV,KAAK,CAACW,MAA9B,CADoB,CACkB;;AAEtC,WAAKL,QAAL,CAAc;AAAE,SAACI,IAAD,GAAQD;AAAV,OAAd;AACH,KAzBY;;AAGT,SAAKL,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAoBDS,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,eAII;AAAM,MAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAII,MAAA,YAAY,EAAE,KAAKM,YAJvB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWD,QAHtB;AAII,MAAA,YAAY,EAAE,KAAKK,YAJvB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAkBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEb,gBAAvB;AAAyC,MAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CAlBJ,CAJJ,CADJ;AA8BH;;AA3D+B;;AA8DpC,eAAeC,MAAf","sourcesContent":["import React from 'react'; \r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../../components/cuttom-button/custom-button.component'; \r\n\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils'; \r\n\r\nimport './sign-in.styles.scss'; \r\n\r\nclass SignIn extends React.Component{\r\n    constructor(){\r\n        super(); \r\n\r\n        this.state = {\r\n            email: '', \r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async(event) => {\r\n        event.preventDefault(); //prevents default submit action from happening. Gives us full control over what is going to happen.\r\n        const { email, password } = this.state;\r\n\r\n        try{\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({email: '', password: ''}); \r\n        } catch(err){\r\n\r\n        } \r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target; //pulls both value and name off event.target (which is the input element)\r\n\r\n        this.setState({ [name]: value }); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account </h2>\r\n                <span>Sign in with your email and password</span>\r\n            \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        name='email' \r\n                        type='email' \r\n                        value={this.state.email}\r\n                        handleChange={this.handleChange} \r\n                        label='email'\r\n                        required\r\n                    />\r\n                    <FormInput \r\n                        name='password' \r\n                        type='password' \r\n                        value={this.state.password}\r\n                        handleChange={this.handleChange} \r\n                        label='password'\r\n                        required\r\n                    />\r\n\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'> Sign In </CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} isGoogleSignIn> Sign In With Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default SignIn; "]},"metadata":{},"sourceType":"module"}