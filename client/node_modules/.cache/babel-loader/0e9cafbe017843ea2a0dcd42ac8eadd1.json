{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Dropbox\\\\Udemy - React\\\\e-commerce\\\\crwn-clothing\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; //Redirect added on L108 \n\nimport { connect } from 'react-redux'; //L107\n\nimport { createStructuredSelector } from 'reselect'; //LESSON 121\n\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { selectCurrentUser } from './redux/user/user.selectors'; //LESSON 121\n\nimport { checkUserSession } from './redux/user/user.actions'; // L 191\n//Lesson 202: convert from class to functional component\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  //constructor() DELETED IN LESSON 107 when using mapDispachToProps\n  //unsubscribeFromAuth = null; //calling a new method - default is null \n  //LESSON 93 //componentDidMount()  //Google authentication sign-in //changed in lession 102 for useEffect\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // } \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => //Redirect when sign in process done\n    currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }\n    }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}; //LESSON 108 - To redirect when sign in process done. \n\n\nconst mapStateToProps = createStructuredSelector({\n  //Called when the store state changes \n  currentUser: selectCurrentUser // collectionsArray: selectCollectionForPreview //LESSON 163\n\n});\n\nconst mapDispachToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, //L108 : formall null. Changed for the purpost to redirect once logged in.  \nmapDispachToProps)(App); //REMOVED FOLLOWING IN L189: \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'; Remove L189\n// import { setCurrentUser } from './redux/user/user.actions'; //L107 Remove L189 \n//Removed from ComponentsDidMount(){\n// this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => { //from firebase/auth library \n//   if (userAuth) {\n//     const userRef = await createUserProfileDocument(userAuth); //checks database. Function from firebase.utils.js\n//     userRef.onSnapshot(snapShot => {\n//       setCurrentUser({ //Changed in Lesson 107 \n//         id: snapShot.id,\n//         ...snapShot.data()\n//       });\n//     });\n//   } else {\n//     setCurrentUser(userAuth); //L107: changed from this.setState({ currentUser: userAuth }) \n//     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=>({title, items})))\n//   }\n// });\n// }\n// L189 - Removed mapDispatchToProps\n//LESSON107 - mapDispatchToProps\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n\n/** LESSON 107\n * Dispatch is a way for redux to know that whatever you're passing\n * is going to be an action object that will be passed to every reducer.\n */","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/client/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","Header","CheckoutPage","selectCurrentUser","checkUserSession","App","currentUser","mapStateToProps","mapDispachToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CAA4D;;AAC5D,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,SAASC,wBAAT,QAAyC,UAAzC,C,CAAqD;;AAGrD,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAAiE;;AACjE,SAASC,gBAAT,QAAiC,2BAAjC,C,CAA6D;AAE7D;;AACA,MAAMC,GAAG,GAAG,CAAC;AAAED,EAAAA,gBAAF;AAAoBE,EAAAA;AAApB,CAAD,KAAuC;AACjD;AAEA;AAEA;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB;AACjB,GAFQ,EAEP,CAACA,gBAAD,CAFO,CAAT,CANiD,CAYjD;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEN,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEI,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEH,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAAM;AACtCO,IAAAA,WAAW,gBACV,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,gBAEV,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF;AAiBD,CAjCD,C,CAmCA;;;AACA,MAAMC,eAAe,GAAGV,wBAAwB,CAAC;AAAE;AACjDS,EAAAA,WAAW,EAAEH,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;;AAKA,MAAMK,iBAAiB,GAAGC,QAAQ,KAAK;AACrCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADK,CAAL,CAAlC;;AAIA,eAAeR,OAAO,CACpBW,eADoB,EACH;AACjBC,iBAFoB,CAAP,CAGbH,GAHa,CAAf,C,CAiCA;AACA;AAEA;AAEA;AAEA;AACI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; //Redirect added on L108 \nimport { connect } from 'react-redux'; //L107\nimport { createStructuredSelector } from 'reselect'; //LESSON 121\n\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport { selectCurrentUser } from './redux/user/user.selectors'; //LESSON 121\nimport { checkUserSession } from './redux/user/user.actions' // L 191\n\n//Lesson 202: convert from class to functional component\nconst App = ({ checkUserSession, currentUser }) => {\n  //constructor() DELETED IN LESSON 107 when using mapDispachToProps\n\n  //unsubscribeFromAuth = null; //calling a new method - default is null \n\n  //LESSON 93 //componentDidMount()  //Google authentication sign-in //changed in lession 102 for useEffect\n  useEffect(() => {\n    checkUserSession();  \n  },[checkUserSession]);\n\n  \n\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // } \n\n  return (\n    <div>\n      <Header />\n      <Switch> {/* Makes sure only one is rendered. */}\n        <Route exact path='/' component={HomePage} />\n        <Route exact path='/checkout' component={CheckoutPage} />\n        <Route path='/shop' component={ShopPage} />\n        <Route exact path='/signin' render={() => //Redirect when sign in process done\n            currentUser ?\n            (<Redirect to='/' />) :\n            (<SignInAndSignUpPage />)\n        }\n        />\n\n      </Switch>\n    </div>\n  );\n}\n\n//LESSON 108 - To redirect when sign in process done. \nconst mapStateToProps = createStructuredSelector({ //Called when the store state changes \n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionForPreview //LESSON 163\n});\n\nconst mapDispachToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(\n  mapStateToProps, //L108 : formall null. Changed for the purpost to redirect once logged in.  \n  mapDispachToProps\n)(App);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//REMOVED FOLLOWING IN L189: \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'; Remove L189\n\n// import { setCurrentUser } from './redux/user/user.actions'; //L107 Remove L189 \n\n//Removed from ComponentsDidMount(){\n\n// this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => { //from firebase/auth library \n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth); //checks database. Function from firebase.utils.js\n\n    //     userRef.onSnapshot(snapShot => {\n    //       setCurrentUser({ //Changed in Lesson 107 \n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       });\n    //     });\n    //   } else {\n    //     setCurrentUser(userAuth); //L107: changed from this.setState({ currentUser: userAuth }) \n    //     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=>({title, items})))\n    //   }\n    // });\n// }\n\n// L189 - Removed mapDispatchToProps\n//LESSON107 - mapDispatchToProps\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n/** LESSON 107\n * Dispatch is a way for redux to know that whatever you're passing\n * is going to be an action object that will be passed to every reducer.\n */"]},"metadata":{},"sourceType":"module"}