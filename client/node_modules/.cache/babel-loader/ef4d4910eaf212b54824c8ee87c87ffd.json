{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mark\\\\Dropbox\\\\Udemy - React\\\\e-commerce\\\\crwn-clothing\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; //Redirect added on L108 \n\nimport { connect } from 'react-redux'; //L107\n\nimport { createStructuredSelector } from 'reselect'; //LESSON 121\n\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport { selectCurrentUser } from './redux/user/user.selectors'; //LESSON 121\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  //calling a new method - default is null \n  //LESSON 93\n  componentDidMount() {//Google authentication sign-in\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => //Redirect when sign in process done\n      this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //LESSON 108 - To redirect when sign in process done. \n\n\nconst mapStateToProps = createStructuredSelector({\n  //Called when the store state changes \n  currentUser: selectCurrentUser // collectionsArray: selectCollectionForPreview //LESSON 163\n\n});\nexport default connect(mapStateToProps, //L108 : formall null. Changed for the purpost to redirect once logged in.  \nmapDispatchToProps)(App); //REMOVED FOLLOWING IN L189: \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'; Remove L189\n// import { setCurrentUser } from './redux/user/user.actions'; //L107 Remove L189 \n//Removed from ComponentsDidMount(){\n// this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => { //from firebase/auth library \n//   if (userAuth) {\n//     const userRef = await createUserProfileDocument(userAuth); //checks database. Function from firebase.utils.js\n//     userRef.onSnapshot(snapShot => {\n//       setCurrentUser({ //Changed in Lesson 107 \n//         id: snapShot.id,\n//         ...snapShot.data()\n//       });\n//     });\n//   } else {\n//     setCurrentUser(userAuth); //L107: changed from this.setState({ currentUser: userAuth }) \n//     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=>({title, items})))\n//   }\n// });\n// }\n// L189 - Removed mapDispatchToProps\n//LESSON107 - mapDispatchToProps\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n\n/** LESSON 107\n * Dispatch is a way for redux to know that whatever you're passing \n * is going to be an action object that will be passed to every reducer. \n */","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","Header","CheckoutPage","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CAA4D;;AAC5D,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,SAASC,wBAAT,QAAyC,UAAzC,C,CAAqD;;AAGrD,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAAiE;;AAEjE,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAUhCC,mBAVgC,GAUV,IAVU;AAAA;;AAUJ;AAE5B;AACAC,EAAAA,iBAAiB,GAAG,CAAG;AAEtB;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEI,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEH,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,MAAM;AACxC,WAAKW,KAAL,CAAWC,WAAX,gBACG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,gBAEG,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAiBD;;AAvC+B,C,CA0ClC;;;AACA,MAAMC,eAAe,GAAGf,wBAAwB,CAAC;AAAE;AACjDc,EAAAA,WAAW,EAAER,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;AAKA,eAAeP,OAAO,CACpBgB,eADoB,EACH;AACjBC,kBAFoB,CAAP,CAGbT,GAHa,CAAf,C,CAMA;AACA;AAEA;AAEA;AAEA;AACI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; //Redirect added on L108 \nimport { connect } from 'react-redux'; //L107\nimport { createStructuredSelector } from 'reselect'; //LESSON 121\n\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport Header from './components/header/header.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport { selectCurrentUser } from './redux/user/user.selectors'; //LESSON 121\n\nclass App extends React.Component {\n  //DELETED IN LESSON 107 when using mapDispachToProps\n  // constructor(){\n  //   super(); \n\n  //   this.state = {\n  //     currentUser: null \n  //   }\n  // };  \n\n  unsubscribeFromAuth = null; //calling a new method - default is null \n\n  //LESSON 93\n  componentDidMount() {  //Google authentication sign-in\n   \n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch> {/* Makes sure only one is rendered. */}\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/signin' render={() => //Redirect when sign in process done\n            this.props.currentUser ?\n              (<Redirect to='/' />) :\n              (<SignInAndSignUpPage />)\n          }\n          />\n\n        </Switch>\n      </div>\n    );\n  }\n}\n\n//LESSON 108 - To redirect when sign in process done. \nconst mapStateToProps = createStructuredSelector({ //Called when the store state changes \n  currentUser: selectCurrentUser\n  // collectionsArray: selectCollectionForPreview //LESSON 163\n});\n\nexport default connect(\n  mapStateToProps, //L108 : formall null. Changed for the purpost to redirect once logged in.  \n  mapDispatchToProps\n)(App);\n\n\n//REMOVED FOLLOWING IN L189: \n// import { auth, createUserProfileDocument } from './firebase/firebase.utils'; Remove L189\n\n// import { setCurrentUser } from './redux/user/user.actions'; //L107 Remove L189 \n\n//Removed from ComponentsDidMount(){\n\n// this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => { //from firebase/auth library \n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth); //checks database. Function from firebase.utils.js\n\n    //     userRef.onSnapshot(snapShot => {\n    //       setCurrentUser({ //Changed in Lesson 107 \n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       });\n    //     });\n    //   } else {\n    //     setCurrentUser(userAuth); //L107: changed from this.setState({ currentUser: userAuth }) \n    //     // addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=>({title, items})))\n    //   }\n    // });\n// }\n\n// L189 - Removed mapDispatchToProps\n//LESSON107 - mapDispatchToProps\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// });\n/** LESSON 107\n * Dispatch is a way for redux to know that whatever you're passing \n * is going to be an action object that will be passed to every reducer. \n */"]},"metadata":{},"sourceType":"module"}