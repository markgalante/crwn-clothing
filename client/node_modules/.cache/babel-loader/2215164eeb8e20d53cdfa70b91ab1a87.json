{"ast":null,"code":"import firebase from 'firebase/app'; //firebase has all the utility libraries loaded. \n\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBtxt3U4w-MilNBh5BVq28QzHh-JSiDVuU\",\n  authDomain: \"crwn-db-3668c.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-3668c.firebaseio.com\",\n  projectId: \"crwn-db-3668c\",\n  storageBucket: \"crwn-db-3668c.appspot.com\",\n  messagingSenderId: \"247083066837\",\n  appId: \"1:247083066837:web:fa22c0e09908a429ac095c\",\n  measurementId: \"G-KB8N4T1CTQ\"\n}; //LECTURE 91\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  //We get userAuth from auth library\n  if (!userAuth) {\n    return; //exit from the function. Don't do anything else. \n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    //create user if user doesnt exist\n    const {\n      displayName,\n      email\n    } = userAuth; //get displayName and email from userAuth;\n\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log('Error creating user: ' + err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async ( //L164\ncollectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"COLLECTION REF\", collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  console.log(transformedCollection);\n  return transformedCollection.reduce((accumulator, collection) => {\n    //LESSON 167\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth(); //from firebase/auth\n\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'; //firebase has all the utility libraries loaded. \r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth'; \r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBtxt3U4w-MilNBh5BVq28QzHh-JSiDVuU\",\r\n    authDomain: \"crwn-db-3668c.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-3668c.firebaseio.com\",\r\n    projectId: \"crwn-db-3668c\",\r\n    storageBucket: \"crwn-db-3668c.appspot.com\",\r\n    messagingSenderId: \"247083066837\",\r\n    appId: \"1:247083066837:web:fa22c0e09908a429ac095c\",\r\n    measurementId: \"G-KB8N4T1CTQ\"\r\n}; \r\n\r\n//LECTURE 91\r\nexport const createUserProfileDocument = async(userAuth, additionalData) =>{ //We get userAuth from auth library\r\n    if(!userAuth){\r\n        return; //exit from the function. Don't do anything else. \r\n    }\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`); \r\n    const snapShot = await userRef.get(); \r\n\r\n    if(!snapShot.exists){ //create user if user doesnt exist\r\n        const { displayName, email } = userAuth; //get displayName and email from userAuth;\r\n        const createdAt = new Date(); \r\n        \r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email, \r\n                createdAt, \r\n                ...additionalData\r\n            });\r\n        } catch (err){\r\n            console.log('Error creating user: ' + err.message); \r\n        }\r\n    }\r\n    return userRef; \r\n}; \r\n\r\nexport const addCollectionAndDocuments = async ( //L164\r\n    collectionKey, \r\n    objectsToAdd\r\n    ) => { \r\n    const collectionRef = firestore.collection(collectionKey); \r\n    console.log(\"COLLECTION REF\", collectionRef);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc()\r\n        batch.set(newDocRef, obj); \r\n    }); \r\n\r\n    return await batch.commit()\r\n}; \r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n        const { title, items } = doc.data(); \r\n\r\n        return{\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id, \r\n            title, \r\n            items \r\n        }\r\n    }); \r\n    console.log(transformedCollection); \r\n    return transformedCollection.reduce((accumulator, collection) => { //LESSON 167\r\n     accumulator[collection.title.toLowerCase()]= collection; \r\n     return accumulator;  \r\n    }, {});\r\n};\r\n\r\nfirebase.initializeApp(config); \r\n\r\nexport const auth = firebase.auth(); //from firebase/auth\r\nexport const firestore = firebase.firestore(); \r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider(); \r\nprovider.setCustomParameters({ promt: 'select_account' }); \r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase; \r\n"]},"metadata":{},"sourceType":"module"}