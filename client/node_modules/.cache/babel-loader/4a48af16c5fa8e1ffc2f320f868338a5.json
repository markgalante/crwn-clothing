{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections'); // collectionRef.get() //LESSON 173 - promise\n  //     .then(\n  //         snapshot => {\n  //             const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //             dispatch(fetchCollectionsSuccess(collectionMap));\n  //         }\n  //     ).catch(err => dispatch(fetchCollectionsFailure(err.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","shopActionTypes","fetchCollectionsAsync","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB,CADqC,CAGrC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMT,SAAS,CAACK,eAAe,CAACK,uBAAjB,EAA0CJ,qBAA1C,CAAf;AACH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    // collectionRef.get() //LESSON 173 - promise\r\n    //     .then(\r\n    //         snapshot => {\r\n    //             const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //             dispatch(fetchCollectionsSuccess(collectionMap));\r\n    //         }\r\n    //     ).catch(err => dispatch(fetchCollectionsFailure(err.message)))\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}