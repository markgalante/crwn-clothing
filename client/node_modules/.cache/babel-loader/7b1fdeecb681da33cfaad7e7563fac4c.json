{"ast":null,"code":"//LESSON 120 - Using the reselect npm package to improve performance. \n// Reselect prevents whole state re-rendering when updating state. \nimport { createSelector } from 'reselect';\n/**\r\n *                      2 Types of selectors: \r\n *                          Input Selector - doesn't use createSelector\r\n *                          Output selector - uses input and create selector\r\n */\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems //returns the value we want out the selector. \n);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA;AACA;AAEA,SAASA,cAAT,QAA+B,UAA/B;AACA;;;;;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAGA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAElB;AAFkB,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFtB,EAEgC,CAFhC,CAFiC,CAA3C;AAOP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAF1C,EAGT,CAHS,CAF4B,CAAtC","sourcesContent":["//LESSON 120 - Using the reselect npm package to improve performance. \r\n// Reselect prevents whole state re-rendering when updating state. \r\n\r\nimport { createSelector } from 'reselect'; \r\n/**\r\n *                      2 Types of selectors: \r\n *                          Input Selector - doesn't use createSelector\r\n *                          Output selector - uses input and create selector\r\n */\r\n\r\nconst selectCart = state => state.cart; \r\n\r\n\r\nexport const selectCartItems = createSelector(\r\n    [selectCart], \r\n    cart => cart.cartItems //returns the value we want out the selector. \r\n); \r\n\r\nexport const selectCartHidden = createSelector(\r\n    [selectCart], \r\n    cart => cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount = createSelector(\r\n    [selectCartItems], \r\n    cartItems => cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) => \r\n        accumulatedQuantity + cartItem.quantity, 0) \r\n); \r\n\r\nexport const selectCartTotal = createSelector(\r\n    [selectCartItems], \r\n    cartItems => cartItems.reduce(\r\n        (accumulatedQuantity, cartItem) => \r\n        accumulatedQuantity + cartItem.quantity * cartItem.price, \r\n        0) \r\n); \r\n\r\n"]},"metadata":{},"sourceType":"module"}