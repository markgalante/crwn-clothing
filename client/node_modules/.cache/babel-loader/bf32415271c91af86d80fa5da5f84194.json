{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; //middleware from redux/ \n\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer'; //LESSON 105: Set up middleware. \n\nconst middlewares = [thunk]; //LESSON 151 - ONLY SHOWING LOGGER IF IN PRODUCTION MODE: \n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store); //A persisted version of our store.","map":{"version":3,"sources":["C:/Users/Mark/Dropbox/Udemy - React/e-commerce/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAAsD;;AACtD,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACF,KAAD,CAApB,C,CAEA;;AACA,IAAGG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBP,MAAjB;AACH;;AACD,OAAO,MAAMQ,KAAK,GAAGX,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGK,WAAJ,CAA7B,CAAzB;AAEP,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B,C,CAAuC","sourcesContent":["import { createStore, applyMiddleware } from 'redux'; //middleware from redux/ \r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger'; \r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './root-reducer'; \r\n\r\n//LESSON 105: Set up middleware. \r\nconst middlewares = [thunk]; \r\n\r\n//LESSON 151 - ONLY SHOWING LOGGER IF IN PRODUCTION MODE: \r\nif(process.env.NODE_ENV===\"development\"){\r\n    middlewares.push(logger);\r\n}\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store); //A persisted version of our store. "]},"metadata":{},"sourceType":"module"}